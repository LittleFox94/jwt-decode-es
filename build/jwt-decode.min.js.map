{"version":3,"file":"jwt-decode.min.js","sources":["../lib/errors.mjs","../lib/atob.mjs","../lib/base64_url_decode.mjs","../lib/index.mjs"],"sourcesContent":["export function InvalidTokenError(message) {\r\n  this.message = message;\r\n}\r\n\r\nInvalidTokenError.prototype = new Error();\r\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\r\n\r\nexport function InvalidCharacterError(message) {\r\n  this.message = message;\r\n}\r\n\r\nInvalidCharacterError.prototype = new Error();\r\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\r\n","/**\r\n * The code was extracted from:\r\n * https://github.com/davidchambers/Base64.js\r\n * and slightly modified by enthusiasts\r\n */\r\n\r\nimport { InvalidCharacterError } from \"./errors\";\r\n\r\nconst chars =\r\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n/**\r\n * atob polyfill, if window.atob is not available\r\n * @param {string} input\r\n */\r\nfunction polyfill(input) {\r\n  const str = String(input).replace(/=+$/, \"\");\r\n  if (str.length % 4 == 1) {\r\n    throw new InvalidCharacterError(\r\n      \"'atob' failed: The string to be decoded is not correctly encoded.\"\r\n    );\r\n  }\r\n  for (\r\n    // initialize result and counters\r\n    var bc = 0, bs, buffer, idx = 0, output = \"\";\r\n    // get next character\r\n    (buffer = str.charAt(idx++));\r\n    // character found in table? initialize bit storage and add its ascii value;\r\n    ~buffer &&\r\n    ((bs = bc % 4 ? bs * 64 + buffer : buffer),\r\n    // and if not first of each 4 characters,\r\n    // convert the first 8 bits to one ascii character\r\n    bc++ % 4)\r\n      ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\r\n      : 0\r\n  ) {\r\n    // try to find character in table (0-63, not found => -1)\r\n    buffer = chars.indexOf(buffer);\r\n  }\r\n  return output;\r\n}\r\n\r\nexport default (typeof window !== \"undefined\" &&\r\n  window.atob &&\r\n  window.atob.bind(window)) ||\r\n  polyfill;\r\n","import atob from \"./atob\";\r\n\r\nfunction b64DecodeUnicode(str) {\r\n  // Going backwards: from bytestream, to percent-encoding, to original string.\r\n  return decodeURIComponent(\r\n    atob(str)\r\n      .split(\"\")\r\n      .map(function (c) {\r\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join(\"\")\r\n  );\r\n}\r\n\r\nexport default function (str) {\r\n  let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n  switch (output.length % 4) {\r\n    case 0:\r\n      break;\r\n    case 2:\r\n      output += \"==\";\r\n      break;\r\n    case 3:\r\n      output += \"=\";\r\n      break;\r\n    default:\r\n      throw \"Illegal base64url string!\";\r\n  }\r\n\r\n  try {\r\n    return b64DecodeUnicode(output);\r\n  } catch (err) {\r\n    return atob(output);\r\n  }\r\n}\r\n","\"use strict\";\r\n\r\nimport base64_url_decode from \"./base64_url_decode\";\r\nimport { InvalidTokenError } from \"./errors\";\r\n\r\nexport function jwt_decode(token, options) {\r\n  if (typeof token !== \"string\") {\r\n    throw new InvalidTokenError(\"Invalid token specified\");\r\n  }\r\n\r\n  options = options || {};\r\n  var pos = options.header === true ? 0 : 1;\r\n  try {\r\n    return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\r\n  } catch (e) {\r\n    throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\r\n  }\r\n}\r\n\r\nexport * from \"./errors.mjs\";\r\n"],"names":["InvalidTokenError","message","this","InvalidCharacterError","prototype","Error","name","window","atob","bind","input","const","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","let","decodeURIComponent","split","map","c","charCodeAt","toString","slice","join","b64DecodeUnicode","err","token","options","pos","header","JSON","parse","base64_url_decode","e"],"mappings":"qPAAO,SAASA,EAAkBC,GAChCC,KAAKD,QAAUA,EAMV,SAASE,EAAsBF,GACpCC,KAAKD,QAAUA,EAJjBD,EAAkBI,UAAY,IAAIC,MAClCL,EAAkBI,UAAUE,KAAO,oBAMnCH,EAAsBC,UAAY,IAAIC,MACtCF,EAAsBC,UAAUE,KAAO,8BC8BL,oBAAXC,QACrBA,OAAOC,MACPD,OAAOC,KAAKC,KAAKF,SA7BnB,SAAkBG,GAChBC,IAAMC,EAAMC,OAAOH,GAAOI,QAAQ,MAAO,IACzC,GAAIF,EAAIG,OAAS,GAAK,EACpB,MAAM,IAAIZ,EACR,qEAGJ,IAEE,IAAYa,EAAIC,EAAZC,EAAK,EAAeC,EAAM,EAAGC,EAAS,GAEzCH,EAASL,EAAIS,OAAOF,MAEpBF,IACCD,EAAKE,EAAK,EAAS,GAALF,EAAUC,EAASA,EAGnCC,IAAO,GACFE,GAAUP,OAAOS,aAAa,IAAON,KAAS,EAAIE,EAAM,IACzD,EAGJD,EA5BF,oEA4BiBM,QAAQN,GAEzB,OAAOG,GCzBM,WAAUR,GACvBY,IAAIJ,EAASR,EAAIE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAClD,OAAQM,EAAOL,OAAS,GACtB,KAAK,EACH,MACF,KAAK,EACHK,GAAU,KACV,MACF,KAAK,EACHA,GAAU,IACV,MACF,QACE,KAAM,4BAGV,IACE,OA5BJ,SAA0BR,GAExB,OAAOa,mBACLjB,EAAKI,GACFc,MAAM,IACNC,KAAI,SAAUC,GACb,MAAO,KAAO,KAAOA,EAAEC,WAAW,GAAGC,SAAS,KAAKC,OAAO,MAE3DC,KAAK,KAoBDC,CAAiBb,GACxB,MAAOc,GACP,OAAO1B,EAAKY,iEC3BT,SAAoBe,EAAOC,GAChC,GAAqB,iBAAVD,EACT,MAAM,IAAInC,EAAkB,2BAI9B,IAAIqC,GAAyB,KAD7BD,EAAUA,GAAW,IACHE,OAAkB,EAAI,EACxC,IACE,OAAOC,KAAKC,MAAMC,EAAkBN,EAAMT,MAAM,KAAKW,KACrD,MAAOK,GACP,MAAM,IAAI1C,EAAkB,4BAA8B0C,EAAEzC"}